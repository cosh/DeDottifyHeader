name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_PATH: '.'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal

  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Publish application (Windows x64)
      run: dotnet publish DeDottifyHeader/DeDottifyHeader.csproj --configuration Release --runtime win-x64 --self-contained true --output ./publish/win-x64
      
    - name: Publish application (Linux x64)
      run: dotnet publish DeDottifyHeader/DeDottifyHeader.csproj --configuration Release --runtime linux-x64 --self-contained true --output ./publish/linux-x64
      
    - name: Publish application (macOS x64)
      run: dotnet publish DeDottifyHeader/DeDottifyHeader.csproj --configuration Release --runtime osx-x64 --self-contained true --output ./publish/osx-x64

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Run security analysis
      run: |
        dotnet list package --vulnerable --include-transitive 2>&1 | tee security-report.txt
        if grep -q "has the following vulnerable packages" security-report.txt; then
          echo "Security vulnerabilities found!"
          cat security-report.txt
          exit 1
        else
          echo "No security vulnerabilities found."
        fi